@model ProyectoDeInge.Models.REQUERIMIENTOS
@using Microsoft.AspNet.Identity;
@using Microsoft.AspNet.Identity.Owin;

@{
    ViewBag.Title = "Unificado2";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@*-----Toastr-----*@
<script src="~/Scripts/jquery-1.10.2.js"></script>
<script src="~/Scripts/toastr.js"></script>
<link href="~/Content/toastr.css" rel="stylesheet" />

@*-----SweetAlert-----*@
<script src="~/Scripts/sweet-alert.js"></script>
<link href="~/Content/sweetalert/sweet-alert.css" rel="stylesheet" />

<script>
    $(document).ready(function () {
        if ('@TempData["Unificado2"]' == "Exito") {
            toastr.success('Cambios en el requerimientos guardados exitosamente!', 'EXITO', {
                positionClass: "toast-bottom-right"
            });
        }
        if ('@TempData["Unificado2"]' == "Error") {
            toastr.success('Error al modificar el requerimiento, los cambios no fueron guardados', 'ERROR', {
                positionClass: "toast-bottom-right"
            });
        }
    });

    function removeNestedForm(element, container, deleteElement) {
        $container = $(element).parents(container);
        $container.find(deleteElement).val('True');
        $container.hide();
    }
    function addNestedForm(container, counter, ticks, content) {
        var nextIndex = $(counter).length;
        var pattern = new RegExp(ticks, "gi");
        content = content.replace(pattern, nextIndex);
        $(container).append(content);
    }

    function esconderEliminar() @*Esconde el botón eliminar cuando no se deba usar*@
    {
        $('.elementoModificar').find('input, textarea, select').attr('readonly', false);
        $('.ocultar').children().attr('disabled', true);
        $('.ocultar2').show();
    }

    @*REQ: ID y Versión del Requerimiento
    MOD: La base de Datos (Se borra el requerimiento)*@
    function confirmarEliminar(ID, VERSION_ID) {
        swal({
            title: "Esta seguro que desea eliminar a este requerimieno?",
            text: "Esta acción no es reversible!",
            type: "warning",
            showCancelButton: true,
            confirmButtonColor: "#DD6B55",
            confirmButtonText: "Confirmar!",
            closeOnConfirm: true
        },
        function () {
            $.ajax({
                type: 'POST',
                url: '@Url.Action("eliminarReq")',
                data: 'id='+ID+'&version=' +VERSION_ID,
                success: function (result) {
                    if (result.success) {
                        toastr.success('Requerimiento eliminado con éxito!', 'EXITO', {
                            onHidden: function () {
                                var url = '@Url.Action("Index", "Requerimientos")';
                                window.location.href = url;
                            }, positionClass: 'toast-bottom-right'
                        })
                    }
                },
            });

        });        
    }

</script>
<h2>Gestión de Requerimientos</h2>
<div class="ocultar">
    <a class="btn btn-default" disabled="@(!Model.verificaPermisos.Contains("12") ? "disabled":null)" onclick="esconderEliminar()">Modificar</a>
    <a class="btn btn-default" disabled="@(!Model.verificaPermisos.Contains("13") ? "disabled":null)" onclick="confirmarEliminar('@(Model.ID)',@(Model.VERSION_ID))">Eliminar</a>
</div>
<div class="elementoModificar">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <hr />
            <h4>Datos del Requerimiento</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(Model => Model.PRYCTOID, "Proyecto", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("PRYCTOID", null, htmlAttributes: new { @class = "form-control", @readonly = "readonly", disabled = "disabled"})
                    @Html.ValidationMessageFor(model => model.PRYCTOID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(Model => Model.ID, "Id*", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(Model => Model.ID, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", disabled = "disabled" } })
                    @Html.ValidationMessageFor(Model => Model.ID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(Model => Model.NOMBRE, "Nombre*", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(Model => Model.NOMBRE, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(Model => Model.NOMBRE, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(Model => Model.DESCRIPCION, "Descripción", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextArea("DESCRIPCION", null, new { @class = "form-control", @readonly = "readonly" })
                    @Html.ValidationMessageFor(Model => Model.DESCRIPCION, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(Model => Model.IMAGEN, "Imagen", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(Model => Model.IMAGEN, new { htmlAttributes = new { @class = "form-control" } })
                    @*@Html.ValidationMessageFor(model => model.IMAGEN, "", new { @class = "text-danger" })*@
                    <div class="col-md-10">
                        <input type="file" id="Avatar" name="upload" />
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CRIT_ACEPTACION, "Criterios", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10" id="crite">
                    @Html.AddLink("Agregar criterio", "#crite", ".criterios", "CRIT_ACEPTACION", typeof(ProyectoDeInge.Models.CRIT_ACEPTACION))
                    @Html.EditorFor(model => model.CRIT_ACEPTACION)
                    @Html.ValidationMessageFor(model => model.CRIT_ACEPTACION, "", new { @class = "text-danger" })

                </div>
            </div>

            <hr />
            <h4>Datos de Planeación</h4>
            <hr />

            <div class="form-group">
                @Html.LabelFor(Model => Model.PRIORIDAD, "Prioridad", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(Model => Model.PRIORIDAD, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(Model => Model.PRIORIDAD, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(Model => Model.ESFUERZO, "Esfuerzo", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(Model => Model.ESFUERZO, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(Model => Model.ESFUERZO, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(Model => Model.SPRINT, "Sprint", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(Model => Model.SPRINT, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(Model => Model.SPRINT, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(Model => Model.MODULO, "Módulo", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(Model => Model.MODULO, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(Model => Model.MODULO, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(Model => Model.FECHAINCIO, "Fecha inicio", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(Model => Model.FECHAINCIO, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(Model => Model.FECHAINCIO, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(Model => Model.FECHAFINAL, "Fecha de finalización", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(Model => Model.FECHAFINAL, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(Model => Model.FECHAFINAL, "", new { @class = "text-danger" })
                </div>
            </div>
          

            <div class="form-group">
                @Html.LabelFor(Model => Model.OBSERVACIONES, "Observaciones", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextArea("OBSERVACIONES", null, new { @class = "form-control", @readonly = "readonly" })
                    @Html.ValidationMessageFor(Model => Model.OBSERVACIONES, "", new { @class = "text-danger" })
                </div>
            </div>

            <hr />
            <h4>Estado del Requerimiento</h4>
            <hr />

            <div class="form-group">
                @Html.LabelFor(Model => Model.ENCARGADO, "Encargado", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("ENCARGADO", null, htmlAttributes: new { @class = "form-control", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.ENCARGADO, "", new { @class = "text-danger" })
                </div>
            </div>



            <div class="form-group">
                @Html.LabelFor(Model => Model.ESTADO, "Estado", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.ESTADO, new List<SelectListItem>{
                    new SelectListItem{Text="Pendiente", Value="Pendiente"},
                    new SelectListItem{Text="Asignado", Value="Asignado"},
                    new SelectListItem{Text="Ejecución", Value="Ejecucion"},
                    new SelectListItem{Text="Finalizado", Value="Finalizado"},
                    new SelectListItem{Text="Cerrado", Value="Cerrado"}
                    }, htmlAttributes: new { @class = "form-control", @readonly = "readonly" })
                    @Html.ValidationMessageFor(Model => Model.ESTADO, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(Model => Model.VERSION_ID, "Versión", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(Model => Model.VERSION_ID, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", disabled = "disabled" } })
                    @Html.ValidationMessageFor(Model => Model.VERSION_ID, "", new { @class = "text-danger" })
                </div>
            </div>



            @Html.HiddenFor(Model => Model.ID)
            @Html.HiddenFor(Model => Model.PRYCTOID)
            @Html.HiddenFor(Model => Model.VERSION_ID)

            <div class="ocultar2" style="display:none">
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Aceptar" class="btn btn-primary" />
                        <a class="btn btn-info" onclick="window.location = '@Url.Action("Unificado2", new { id = Model.ID, version = Model.VERSION_ID })';">Cancelar</a>
                    </div>
                </div>
            </div>
        </div>
    }
</div>