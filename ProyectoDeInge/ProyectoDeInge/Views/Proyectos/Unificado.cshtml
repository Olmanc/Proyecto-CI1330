@model ProyectoDeInge.Models.ProyectosViewModel

@{
    ViewBag.Title = "Unificado";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Gestión de Proyectos</h2>

<div class="modos">@*botones de los modos*@
    <a class="btn btn-default" disabled="@(!Model.verificaPermisos.Contains("08") ? "disabled":null)" onclick="habilitaModificar()">Modificar</a>
    <a class="btn btn-default" disabled="@(!Model.verificaPermisos.Contains("09") ? "disabled":null)" onclick="confirmarEliminar('@(Model.modeloProyecto.ID)')">Eliminar</a>
    <a class="btn btn-default" disabled="@(!Model.verificaPermisos.Contains("11") ? "disabled":null)" onclick="window.location = '@Url.Action("Index","Requerimientos", new { pro= Model.modeloProyecto.ID})';">Consultar Requerimientos</a>
</div>

<div class="modificarProyecto">    
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.modeloProyecto.ID)

            @*Campos de los datos del proyecto*@
            <div class="form-group">
                @Html.LabelFor(model => model.modeloProyecto.ID,"Id", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.modeloProyecto.ID, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", disabled = "disabled" } })
                    @Html.ValidationMessageFor(model => model.modeloProyecto.ID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.modeloProyecto.NOMBRE, "Nombre", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.modeloProyecto.NOMBRE, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.modeloProyecto.NOMBRE, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.modeloProyecto.DESCRIPCION, "Descripción", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.modeloProyecto.DESCRIPCION, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.modeloProyecto.DESCRIPCION, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.modeloProyecto.FECHAINICIO, "Fecha de inicio", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.modeloProyecto.FECHAINICIO, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.modeloProyecto.FECHAINICIO, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.modeloProyecto.FECHAFINAL, "Fecha de finalización", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.modeloProyecto.FECHAFINAL, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.modeloProyecto.FECHAFINAL, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.modeloProyecto.DURACION, "Duración (en meses)", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.modeloProyecto.DURACION, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.modeloProyecto.DURACION, "", new { @class = "text-danger" })
                </div>
            </div>

            @*combobox para el estado*@
            <div class="form-group">
                @Html.LabelFor(model => model.modeloProyecto.ESTADO, "Estado", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">                    
                    @Html.DropDownListFor(model => model.modeloProyecto.ESTADO, new SelectList(
                  new List<Object>{
                       new { value = "Por iniciar" , text = "Por iniciar" },
                       new { value = "En ejecución" , text = "En ejecución" },
                       new { value = "En pausa" , text = "En pausa" },
                       new { value = "Finalizado" , text = "Finalizado" },
                       new { value = "Cerrado" , text = "Cerrado" }
                    }, "value", "text", 2), new { @class = "form-control", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.modeloProyecto.ESTADO, "", new { @class = "text-danger" })
                </div>
            </div>

            @*Dropdownlist para escoger lider (sin terminar)*@
            @*@Html.HiddenFor(model => model.modeloUsuario.PRYCTOID);
            <div class="form-group">
                @Html.LabelFor(model => model.modeloUsuario.PRYCTOID, "Líder", htmlAttributes: new { @class = "control-label col-md-2" })
                <div style="width:700px" class="col-md-10">
                    @Html.DropDownListFor(model => model.modeloUsuario.PRYCTOID, ViewBag.Lideres as IEnumerable<SelectListItem>, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.modeloUsuario.PRYCTOID, "", new { @class = "text-danger" })
                </div>
            </div>*@

            @*listas para sisgnnar/desasignar recursos*@
            <div class="row">
                <div class="col-md-2">&nbsp;</div>
                <div class="form-group col-md-4">
                    <label class="control-label">Recursos Asignados</label>
                    @Html.ListBox("recursosAsignados", (MultiSelectList)ViewBag.Asignados, new { @class = "form-control" })
                </div>
                <div class="botones" style="display:none">
                    <div class="form-group col-md-1">
                        <div class="form-group">
                            <button type="button" id="btnRight" class="btn btn-warning btn-lg" >
                                <span class="glyphicon glyphicon-arrow-right" aria-hidden="true"></span>
                            </button>
                        </div>
                        <div class="form-group">
                            <button type="button" id="btnLeft" class="btn btn-warning btn-lg" >
                                <span class="glyphicon glyphicon-arrow-left" aria-hidden="true"></span>
                            </button>
                            <div></div>
                        </div>
                    </div>
                </div>

                <div class="listaDisp" style="display:none">
                    <div class="form-group col-md-4">
                        <label class="control-label">Recursos Disponibles</label>
                        @Html.ListBox("recursosDisponibles", (MultiSelectList)ViewBag.Disponibles, new { @class = "form-control" })
                    </div>
                </div>
            </div>

            @*botones para aceptar o cancelar modificacion*@
            <div class="botonesModificar" style="display:none">
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" id="btnSubmit" value="Aceptar" class="btn btn-default" />
                        <a class="btn btn-default" onclick="window.location = '@Url.Action("Unificado", new { id = Model.modeloProyecto.ID })';">Cancelar</a>
                    </div>
                </div>
            </div>
        </div>
    }
</div>



<script>

    function habilitaModificar() {//habilita los campos para modificar los datos del proyecto
        $('.modificarProyecto').find('input, textarea, select').attr('readonly', false);
        $('.modos').children().attr('disabled', true);
        $('.botonesModificar').show();
        $('.listaDisp').show();
        $('.botones').show();
    }

@*///////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ELIMINAR PROYECTO*@

    function confirmarEliminar(id) {

        var respuesta = confirm('Confirma que desea eliminar este proyecto del sistema?');

        if (respuesta == true)
        {
           $.ajax({
                type: 'POST',
                url: '@Url.Action("eliminarProyecto")',
                data: 'id=' + id,
                success: function (result) {
                    if (result.success)
					{   @*//Si se confirmo que estado de proyecto está Finalizado o Cerrado *@
						alert('Proyecto eliminado con éxito.');
						var url = '@Url.Action("Index", "PROYECTOS")';
						window.location.href = url;
                    }
                    else
                    {   @*//Si el estado de proyecto no está Finalizado o Cerrado *@
                        alert('El proyecto no se puede eliminar porque no está finalizado o cerrado.');
                        var url = '@Url.Action("Index", "PROYECTOS")';
                        window.location.href = url;
                    }
                },
            });
        }
    }

</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqeuryval")
    @Scripts.Render("~/bundles/multiselect")
}