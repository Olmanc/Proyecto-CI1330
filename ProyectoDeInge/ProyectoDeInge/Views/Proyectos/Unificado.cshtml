@model ProyectoDeInge.Models.ProyectosViewModel

@{
    ViewBag.Title = "Unificado";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Gestión de proyectos</h2>

<div class="modos">
    <a class="btn btn-default" @*disabled="@(!Model.verificaPermisos.Contains("04") ? "disabled":null)"*@ onclick="habilitaModificar()">Modificar</a>
    <a class="btn btn-default" @*disabled="@(!Model.verificaPermisos.Contains("05") ? "disabled":null)"*@ onclick="confirmarEliminar('@(Model.modeloProyecto.ID)')">Eliminar</a>
</div>

<div class="modificarProyecto">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.modeloProyecto.ID)

            <div class="form-group">
                @Html.LabelFor(model => model.modeloProyecto.ID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.modeloProyecto.ID, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", disabled = "disabled" } })
                    @Html.ValidationMessageFor(model => model.modeloProyecto.ID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.modeloProyecto.NOMBRE, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.modeloProyecto.NOMBRE, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.modeloProyecto.NOMBRE, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.modeloProyecto.DESCRIPCION, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.modeloProyecto.DESCRIPCION, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.modeloProyecto.DESCRIPCION, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.modeloProyecto.FECHAINICIO, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.modeloProyecto.FECHAINICIO, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.modeloProyecto.FECHAINICIO, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.modeloProyecto.FECHAFINAL, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.modeloProyecto.FECHAFINAL, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.modeloProyecto.FECHAFINAL, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.modeloProyecto.DURACION, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.modeloProyecto.DURACION, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.modeloProyecto.DURACION, "", new { @class = "text-danger" })
                </div>
            </div>

            @*<div class="form-group">
                @Html.LabelFor(model => model.modeloProyecto.ESTADO, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.modeloProyecto.ESTADO, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.modeloProyecto.ESTADO, "", new { @class = "text-danger" })
                </div>
            </div>*@

            <div class="form-group">
                @Html.LabelFor(model => model.modeloProyecto.ESTADO, "ESTADO", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @*@Html.DropDownList("ESTADO", null, htmlAttributes: new { @class = "form-control" })*@
                    @Html.DropDownListFor(model => model.modeloProyecto.ESTADO, new SelectList(
                  new List<Object>{
                       new { value = "Por iniciar" , text = "Por iniciar" },
                       new { value = "En ejecución" , text = "En ejecución" },
                       new { value = "En pausa" , text = "En pausa" },
                       new { value = "Finalizado" , text = "Finalizado" },
                       new { value = "Cerrado" , text = "Cerrado" }
                    }, "value", "text", 2), new { @class = "form-control", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.modeloProyecto.ESTADO, "", new { @class = "text-danger" })
                </div>
            </div>

            <table class="table">
                <tr>
                    <td><!--SelecList de Recursos disponibles-->
                        <div class="form-group">
                            @Html.LabelFor(model => model.otrosRecursos, "Disponibles", new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.ListBoxFor(m => m.recursosDisponibles, Model.otrosRecursos)
                            </div>
                        </div>                        
                    </td>                
                    <td>
                        <!--Buscar como hacer que salgan en una columna-->
                        <a class="btn btn-default"> <<</a>
                        <a class="btn btn-default"> <</a>                        
                        <a class="btn btn-default"> ></a>
                        <a class="btn btn-default"> >></a>
                    </td>                
                    <td><!--SelecList de Recursos asignados-->
                        <div class="form-group">
                            @Html.LabelFor(model => model.recursosAsignados, "Asignados", new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.ListBoxFor(m => m.listaRecursos, Model.recursosAsignados)
                            </div>
                        </div>
                    </td>
                </tr>                
            </table>
            <div class="botonesModificar" style="display:none">
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Aceptar" class="btn btn-default" />                        
                        <a class="btn btn-default" onclick="window.location = '@Url.Action("Unificado", new { id = Model.modeloProyecto.ID })';">Cancelar</a>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

<script>

    function habilitaModificar() {
        $('.modificarProyecto').find('input, textarea, select').attr('readonly', false);
        $('.modos').children().attr('disabled', true);
        $('.botonesModificar').show();
    }

    //function cancelaModificar() {
    //    $('.modificarProyecto').find('input, textarea, select').attr('readonly', true);
    //    $('.modos').children().attr('disabled', false);
    //    $('.botonesModificar').hide();
    //}

    @*function confirmarEliminar(cedula) {

        var respuesta = confirm('Confirma que desea eliminar a esta persona del sistema?');

        if (respuesta == true)
        {
            $.ajax({
                type: 'POST',
                url: '@Url.Action("eliminarPersona")',
                data: 'id=' + cedula,
                success: function (result) {
                    if (result.success)
					{
						alert('Persona eliminada con éxito');
						var url = '@Url.Action("Index", "Proyectos")';
						window.location.href = url;
					}
                },
            });
        }
    }*@

</script>