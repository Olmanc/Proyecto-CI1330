@model ProyectoDeInge.Models.ProyectosViewModel

@{
    ViewBag.Title = "Unificado";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@*-----Toastr-----*@
<script src="~/Scripts/jquery-1.10.2.js"></script>
<script src="~/Scripts/toastr.js"></script>
<link href="~/Content/toastr.css" rel="stylesheet" />

@*-----SweetAlert-----*@
<script src="~/Scripts/sweet-alert.js"></script>
<link href="~/Content/sweetalert/sweet-alert.css" rel="stylesheet" />

<h2>Gestión de Proyectos</h2>

<div class="modos">@*botones de los modos*@
    <a class="btn btn-default" disabled="@(!Model.verificaPermisos.Contains("08") ? "disabled":null)" onclick="habilitaModificar()">Modificar</a>
    <a class="btn btn-default" disabled="@(!Model.verificaPermisos.Contains("09") ? "disabled":null)" onclick="confirmarEliminar('@(Model.modeloProyecto.ID)')">Eliminar</a>
    <a class="btn btn-default" disabled="@(!Model.verificaPermisos.Contains("11") ? "disabled":null)" onclick="window.location = '@Url.Action("Index","Requerimientos", new { pro= Model.modeloProyecto.ID})';">Consultar Requerimientos</a>
</div>

<div class="modificarProyecto">    
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.modeloProyecto.ID)

            @*Campos de los datos del proyecto*@
            <div class="form-group">
                @Html.LabelFor(model => model.modeloProyecto.ID,"Id*", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.modeloProyecto.ID, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", disabled = "disabled"}})
                    @Html.ValidationMessageFor(model => model.modeloProyecto.ID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.modeloProyecto.NOMBRE, "Nombre*", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.modeloProyecto.NOMBRE, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.modeloProyecto.NOMBRE, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.modeloProyecto.DESCRIPCION, "Descripción", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.modeloProyecto.DESCRIPCION, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.modeloProyecto.DESCRIPCION, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.modeloProyecto.FECHAINICIO, "Fecha de inicio", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.modeloProyecto.FECHAINICIO, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.modeloProyecto.FECHAINICIO, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.modeloProyecto.FECHAFINAL, "Fecha de finalización", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.modeloProyecto.FECHAFINAL, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.modeloProyecto.FECHAFINAL, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.modeloProyecto.DURACION, "Duración (en meses)", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.modeloProyecto.DURACION, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.modeloProyecto.DURACION, "", new { @class = "text-danger" })
                </div>
            </div>

            @*combobox para el estado*@
            <div class="form-group">
                @Html.LabelFor(model => model.modeloProyecto.ESTADO, "Estado", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">                    
                    @Html.DropDownListFor(model => model.modeloProyecto.ESTADO, new SelectList(
                  new List<Object>{
                       new { value = "Por iniciar" , text = "Por iniciar" },
                       new { value = "En ejecución" , text = "En ejecución" },
                       new { value = "En pausa" , text = "En pausa" },
                       new { value = "Finalizado" , text = "Finalizado" },
                       new { value = "Cerrado" , text = "Cerrado" }
                    }, "value", "text", 2), new { @class = "form-control", @readonly = "readonly", @disabled="disabled" })
                    @Html.ValidationMessageFor(model => model.modeloProyecto.ESTADO, "", new { @class = "text-danger" })
                </div>
            </div>

            @*Dropdownlist para escoger lider (sin terminar)*@
            @Html.HiddenFor(model => model.modeloUsuario.PRYCTOID)           
            @Html.HiddenFor(model => model.modeloUsuario.NOMBRE)
            @Html.HiddenFor(model => model.modeloUsuario.APELLIDO1)
            @Html.HiddenFor(model => model.modeloUsuario.APELLIDO2)
            @Html.HiddenFor(model => model.modeloUsuario.LIDER)
            <div class="form-group">
                @Html.LabelFor(model => model.modeloUsuario.CEDULA, "Líder", htmlAttributes: new { @class = "control-label col-md-2" })
                <div style="width:700px" class="col-md-10">
                    @Html.DropDownListFor(model => model.modeloUsuario.CEDULA, ViewBag.Lideres as IEnumerable<SelectListItem>, htmlAttributes: new { @class = "form-control", @id = "liderEscogido", @onchange="marcar(this.value)", @disabled="disabled"})
                    @Html.ValidationMessageFor(model => model.modeloUsuario.CEDULA, "", new { @class = "text-danger" })
                </div>                
            </div>
           
            @*Vista parcial - Listas para sisgnnar/desasignar recursos*@
            <div id="partialDiv" class="col-md-10" style="margin-right: 250px">
                @Html.Partial("_RecursosPartial")
            </div>        
            <br />                                   

            @*botones para aceptar o cancelar modificacion*@
            <div class="botonesModificar" style="display:none">
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" id="btnSubmit" value="Aceptar" class="btn btn-primary" />
                        <a class="btn btn-info" onclick="window.location = '@Url.Action("Unificado", new { id = Model.modeloProyecto.ID })';">Cancelar</a>
                    </div>
                </div>
            </div>
        </div>
        <br /><br /><br /><br /><br />
    }
</div>



<script>

    $(document).ready(function () {
        //notificaciones de error y éxito
        switch ('@TempData["Unificado"]') {
            case "Finalizado":
                toastr.error('No puede cambiar el estado de proyecto a Finalizado, si hay requerimientos sin finalizar.', 'ERROR', {
                    positionClass: "toast-bottom-right"
                });
                break;
            case "Fecha":
                toastr.error('La fecha de finalización no puede ser anterior a la fecha de inicio.', 'ERROR', {
                    positionClass: "toast-bottom-right"
                });
                break;
            case "Exito":
                toastr.success('Proyecto modificado exitósamente.', 'EXITO', {
                    positionClass: "toast-bottom-right"
                });
                break;
            case "Error":
                toastr.error('Error al guardar los cambios.', 'ERROR', {
                    positionClass: "toast-bottom-right"
                });
                break;
        }
    });
    function habilitaModificar() {//habilita los campos para modificar los datos del proyecto
        $('.modificarProyecto').find('input, textarea, select').attr('readonly', false);
        $('.modificarProyecto').find('input, textarea, select').attr('disabled', false);
        $('.modos').children().attr('disabled', true);
        $('.botonesModificar').show();
        $('.listaDisp').show();
        $('.botones').show();
    }

@*///////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ELIMINAR PROYECTO*@

    function confirmarEliminar(id) {
        swal({
            title: "Esta seguro que desea eliminar este proyecto del sistema?",
            text: "Esta acción no es reversible!",
            type: "warning",
            showCancelButton: true,
            confirmButtonColor: "#DD6B55",
            confirmButtonText: "Confirmar!",
            closeOnConfirm: true
        },
        function () {
            $.ajax({
                type: 'POST',
                url: '@Url.Action("eliminarProyecto")',
                data: 'id=' + id,
                success: function (result) {
                    if (result.success) {
                        toastr.success('El proyecto fue eliminado con éxito! :)', 'EXITO', {
                            onHidden: function () {
                                var url = '@Url.Action("Index", "PROYECTOS")';
                                window.location.href = url;
                            }, positionClass: 'toast-bottom-right'
                        })
                    }
                    else
                    {   @*//Si el estado de proyecto no está Finalizado o Cerrado *@
                        toastr.error('El proyecto no se puede eliminar porque no está finalizado o cerrado.', 'ERROR', {
                            positionClass: 'toast-bottom-right'
                        })
                    }
                },
            });
        });        
    }

    function marcar (val) {
        $.ajax(
        {
            url: '/Proyectos/llenaRecursos?id=' + val,
            type: 'GET',
            data: "",
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                $("#partialDiv").html(data);
            },
            error: function () {
                alert("error");
            }
        });
    }

</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqeuryval")
    @Scripts.Render("~/bundles/multiselect")
}