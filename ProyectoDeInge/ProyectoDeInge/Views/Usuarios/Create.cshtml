@model ProyectoDeInge.Models.ModeloIntermedio

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@*-----Toastr-----*@
<script src="~/Scripts/jquery-1.10.2.js"></script>
<script src="~/Scripts/toastr.js"></script>
<link href="~/Content/toastr.css" rel="stylesheet" />

@*-----SweetAlert-----*@
<script src="~/Scripts/sweet-alert.js"></script>
<link href="~/Content/sweetalert/sweet-alert.css" rel="stylesheet" />

<h2>Agregar Usuario</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => Model.modeloUsuario.CEDULA, "Cédula",  htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => Model.modeloUsuario.CEDULA, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => Model.modeloUsuario.CEDULA, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => Model.modeloUsuario.NOMBRE, "Nombre", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => Model.modeloUsuario.NOMBRE, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => Model.modeloUsuario.NOMBRE, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => Model.modeloUsuario.APELLIDO1, "Apellido 1", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => Model.modeloUsuario.APELLIDO1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => Model.modeloUsuario.APELLIDO1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">

            @Html.LabelFor(model => Model.modeloUsuario.APELLIDO2, "Apellido 2", htmlAttributes: new { @class = "control-label col-md-2" })

            <div class="col-md-10">
                @Html.EditorFor(model => Model.modeloUsuario.APELLIDO2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => Model.modeloUsuario.APELLIDO2, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => Model.modeloCorreo.CORREO, "Correo", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => Model.modeloCorreo.CORREO, new { htmlAttributes = new { @class = "form-control" , required="required"} })
                @Html.ValidationMessageFor(model => Model.modeloCorreo.CORREO, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => Model.modeloCorreo2.CORREO, "Correo 2",  htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => Model.modeloCorreo2.CORREO, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => Model.modeloCorreo2.CORREO, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => Model.modeloTelefono.NUMERO, "Teléfono",  htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => Model.modeloTelefono.NUMERO, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => Model.modeloTelefono.NUMERO, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => Model.modeloTelefono2.NUMERO, "Teléfono 2",  htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => Model.modeloTelefono2.NUMERO, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => Model.modeloTelefono2.NUMERO, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.rol, "Rol:", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.rol, new SelectList(
                    new List<Object> { new { value = "0", text = "Seleccione un rol" }, new { value = "1", text = "Administrador" }, new { value = "2", text = "Desarrollador" }, new { value = "3", text = "Usuario" } },
                    "value", "text", 0), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.rol, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Aceptar" class="btn btn-primary" />
                <input type="reset" value="Cancelar" class="btn btn-info" />
            </div>
        </div>
    </div>
}
<!--
<div>
    Html.ActionLink("Back to List", "Index")
</div>-->
<script type='text/javascript'>  

   $(document).ready(function () {
       
       //swal('Ventaja','Mensaje de la ventana :)','info');

       //toastr.info('Mensaje de notificación :)', 'Notificación');

       switch ('@TempData["Create"]') {
           case "Existe":
               toastr.error('Ya existe un usuario con esta cedula en el sistema!', 'ERROR', {
                   positionClass: "toast-bottom-right"
               });
               break;
           case "Exito":
               toastr.success('Usuario creado exitosamente', 'EXITO', {
                   positionClass: "toast-bottom-right"
               });
               break;
           case "Error":
               toastr.erro('Error al crear un usuario nuevo', 'ERROR', {
                   positionClass: "toast-bottom-right"
               });
               break;
       }
   });
</script>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
