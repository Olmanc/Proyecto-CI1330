@model ProyectoDeInge.Models.ModeloIntermedio

@{
    ViewBag.Title = "Unificado";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script>

    function esconderEliminar()
    {
        $('.elementoEliminar').hide();
        $('.elementoModificar').show();
    }

    function esconderModificar() {
        $('.elementoEliminar').show();
        $('.elementoModificar').hide();
    }

    function confirmarEliminar(cedula) {

        var respuesta = confirm('Confirma que desea eliminar a esta persona del sistema?');

        if (respuesta == true)
        {
            $.ajax({
                type: 'POST',
                url: '@Url.Action("eliminarPersona")',
                data: 'id=' + cedula,
                success: function (result) {
                    if (result.success)
					{
						alert('Persona eliminada con éxito');
						var url = '@Url.Action("Index", "USUARIOS")';
						window.location.href = url;
					}
                },
            });
        }
    }

</script>
<h2>VistUnificada</h2>
<div>
    <div class="elementoEliminar">
        <h4>Usuario</h4>
        <hr />
        <dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.modeloUsuario.NOMBRE)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.modeloUsuario.NOMBRE)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.modeloUsuario.APELLIDO1)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.modeloUsuario.APELLIDO1)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.modeloUsuario.APELLIDO2)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.modeloUsuario.APELLIDO2)
            </dd>
            <dt>
                Telefono
            </dt>
            <dd>
                @for (int j = 0; j < Model.listaTelefonos.Count; j++)
                {
                    if (Model.modeloUsuario.CEDULA.Equals(Model.listaTelefonos.ElementAt(j).CEDULA))
                    {
                        @Html.DisplayFor(modelItem => Model.listaTelefonos.ElementAt(j).NUMERO)<br>
                    }
                }
            </dd>
            <dt>
                Correos
            </dt>
            <dd>
                @for (int j = 0; j < Model.listaCorreos.Count; j++)
                {
                    if (Model.modeloUsuario.CEDULA.Equals(Model.listaCorreos.ElementAt(j).CEDULA))
                    {
                        @Html.DisplayFor(modelItem => Model.listaCorreos.ElementAt(j).CORREO)<br>
                    }
                }
            </dd>

        </dl>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <a class="btn btn-default" onclick="esconderEliminar()">Modificar</a>
                <a class="btn btn-default" onclick="confirmarEliminar('@(Model.modeloUsuario.CEDULA)')">Eliminar</a>
            </div>
        </div>
    </div>
</div>
<div class="elementoModificar" style="display:none">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Usuario</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.modeloUsuario.NOMBRE, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.modeloUsuario.NOMBRE, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.modeloUsuario.NOMBRE, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.modeloUsuario.APELLIDO1, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.modeloUsuario.APELLIDO1, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.modeloUsuario.APELLIDO1, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.modeloUsuario.APELLIDO2, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.modeloUsuario.APELLIDO2, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.modeloUsuario.APELLIDO2, "", new { @class = "text-danger" })
                </div>
            </div>
            @Html.HiddenFor(model => model.modeloUsuario.CEDULA)
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                    <a class="btn btn-default" onclick="esconderModificar()">Cancelar</a>
                </div>
            </div>
        </div>
    }
</div>
<p>
    @Html.ActionLink("Volver", "Index")
</p>